{"version":3,"file":"menu.service.js","sourceRoot":"","sources":["../../Users/soichit/Documents/menu-test2/tmp/broccoli_type_script_compiler-input_base_path-Jbp1hOBT.tmp/0/src/app/menu/menu.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Recipe} from \"./recipe\";\nimport {FoodType} from \"./food-type-class\";\n\nimport {Ingredient} from \"../shared/ingredient\";\n\n\n@Injectable()\nexport class MenuService {\n    private recipes: Recipe[] = [\n        new Recipe('Schnitzel', 'Very tasty', 'http://images.derberater.de/files/imagecache/456xXXX_berater/berater/slides/WienerSchnitzel.jpg', [\n            new Ingredient('French Fries', 2),\n            new Ingredient('Pork Meat', 1)\n        ]),\n        new Recipe('Summer Salad', 'Okayish', 'http://ohmyveggies.com/wp-content/uploads/2013/06/the_perfect_summer_salad.jpg', [])\n    ];\n\n    private foodTypes: FoodType[] = [\n        new FoodType('Appetizers', [\n            new Recipe('salad', 'description', 'http://cooking.my.panasonic.com/wp-content/uploads/2016/06/salad.jpg', [\n                new Ingredient('lettuce', 2),\n                new Ingredient('tomatoes', 4),\n                new Ingredient('olives', 8)\n            ]),\n            new Recipe('soup', 'description', 'http://www.my7daydiet.com/images/wonder-soup.jpg', []),\n            new Recipe('fries', 'description', 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQogn8pSGg-Omi2P28rGFQMwaZbYpM5qbmYqNskoOKF-ALSo8aJ', [])\n\n        ]),\n        new FoodType('Lunch', [\n            new Recipe('sandwich', '', '', []),\n            new Recipe('hamburger', '', '', []),\n            new Recipe('hotdog', '', '', [])\n        ]),\n        new FoodType('Dinner', [\n            new Recipe('steak', '', '', []),\n            new Recipe('chicken', '', '', []),\n            new Recipe('pork', '', '', [])\n        ]),\n        new FoodType('Desserts', [\n            new Recipe('cake', '', '', []),\n            new Recipe('icecream', '', '', []),\n            new Recipe('pudding', '', '', [])\n        ])\n    ];\n\n\n\n    constructor() {}\n\n    getRecipes() {\n        return this.recipes;\n    }\n\n    getRecipe(id: number) {\n        return this.recipes[id];\n    }\n\n    deleteRecipe(recipe: Recipe) {\n        this.recipes.splice(this.recipes.indexOf(recipe), 1);\n    }\n\n    getAllTypes() {\n        return this.foodTypes;\n    }\n    \n    getAllFoods(id: number) {\n        return this.foodTypes[id];\n    }\n    \n    getFoodItem(id1: number, id2: number) {\n        console.log(\"id1: \" + id1 + \", id2: \" + id2);\n        return this.foodTypes[id1][id2];\n    }\n}\n"]}